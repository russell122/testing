/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'swiper-icons';
  src: url("data:application/font-woff;charset=utf-8;base64, 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") format("woff");
  font-weight: 400;
  font-style: normal; }

:root {
  --swiper-theme-color: #007aff; }

.swiper-container {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  /* Fix of Webkit flickering */
  z-index: 1; }

.swiper-container-vertical > .swiper-wrapper {
  flex-direction: column; }

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  box-sizing: content-box; }

.swiper-container-android .swiper-slide,
.swiper-wrapper {
  transform: translate3d(0px, 0, 0); }

.swiper-container-multirow > .swiper-wrapper {
  flex-wrap: wrap; }

.swiper-container-multirow-column > .swiper-wrapper {
  flex-wrap: wrap;
  flex-direction: column; }

.swiper-container-free-mode > .swiper-wrapper {
  transition-timing-function: ease-out;
  margin: 0 auto; }

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: transform; }

.swiper-slide-invisible-blank {
  visibility: hidden; }

/* Auto Height */
.swiper-container-autoheight, .swiper-container-autoheight .swiper-slide {
  height: auto; }

.swiper-container-autoheight .swiper-wrapper {
  align-items: flex-start;
  transition-property: transform, height; }

/* 3D Effects */
.swiper-container-3d {
  perspective: 1200px; }
  .swiper-container-3d .swiper-wrapper, .swiper-container-3d .swiper-slide, .swiper-container-3d .swiper-slide-shadow-left, .swiper-container-3d .swiper-slide-shadow-right, .swiper-container-3d .swiper-slide-shadow-top, .swiper-container-3d .swiper-slide-shadow-bottom, .swiper-container-3d .swiper-cube-shadow {
    transform-style: preserve-3d; }
  .swiper-container-3d .swiper-slide-shadow-left, .swiper-container-3d .swiper-slide-shadow-right, .swiper-container-3d .swiper-slide-shadow-top, .swiper-container-3d .swiper-slide-shadow-bottom {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10; }
  .swiper-container-3d .swiper-slide-shadow-left {
    background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }
  .swiper-container-3d .swiper-slide-shadow-right {
    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }
  .swiper-container-3d .swiper-slide-shadow-top {
    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }
  .swiper-container-3d .swiper-slide-shadow-bottom {
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0)); }

/* CSS Mode */
.swiper-container-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none;
  /* For Firefox */
  -ms-overflow-style: none;
  /* For Internet Explorer and Edge */ }
  .swiper-container-css-mode > .swiper-wrapper::-webkit-scrollbar {
    display: none; }

.swiper-container-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start; }

.swiper-container-horizontal.swiper-container-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: x mandatory;
  scroll-snap-type: x mandatory; }

.swiper-container-vertical.swiper-container-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: y mandatory;
  scroll-snap-type: y mandatory; }

html {
  font-size: 16px;
  height: 100%; }

body {
  height: 100%;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.2;
  color: #000;
  font-family: "Arial", sans-serif; }

*,
*::before,
*::after {
  box-sizing: border-box; }

ul,
ol {
  list-style: none;
  padding: 0; }

a {
  color: #ccc;
  text-decoration: none; }
  a:hover {
    text-decoration: underline; }

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0; }

a:not([class]) {
  -webkit-text-decoration-skip: ink;
  text-decoration-skip-ink: auto; }

img {
  display: block; }

input,
button,
textarea,
select {
  font: inherit; }

button {
  outline: none !important; }

audio,
canvas,
iframe,
img,
svg,
video,
textarea {
  vertical-align: middle; }

textarea {
  resize: none; }

section {
  position: relative; }

input,
select,
button {
  outline: none; }

.clearFix::after {
  content: "";
  display: table;
  clear: both; }

.container {
  margin: 0 auto;
  padding: 0 15px;
  max-width: 1790px;
  width: 100%; }
  @media screen and (max-width: 1199px) {
    .container {
      max-width: 970px; } }
  @media screen and (max-width: 992px) {
    .container {
      max-width: 750px; } }
  @media screen and (max-width: 768px) {
    .container {
      max-width: none; } }

.img {
  display: block;
  max-width: 100%;
  height: auto; }

.img--cover {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover; }

.g-title-1 {
  font-size: 40px;
  color: #2E3A59;
  font-weight: 700;
  text-transform: uppercase;
  position: relative; }
  .g-title-1::before {
    content: '';
    position: absolute;
    top: -22px;
    left: 50%;
    transform: translate(-50%, 0%);
    width: 184px;
    height: 4px;
    background-color: #00C368; }

.header__wrap {
  padding: 64px 0;
  display: table;
  width: 100%;
  line-height: 150%; }
  @media screen and (max-width: 768px) {
    .header__wrap {
      position: relative; } }
  @media screen and (max-width: 577px) {
    .header__wrap {
      padding: 30px 0 64px 0; } }

.header__logo_elem {
  position: absolute;
  display: inline-block;
  top: 50%;
  left: 58%;
  transform: translate(-50%, -50%); }
  @media screen and (max-width: 992px) {
    .header__logo_elem {
      left: 65%; } }
  @media screen and (max-width: 577px) {
    .header__logo_elem {
      left: 59%; } }

.header__logo {
  display: table-cell;
  vertical-align: middle;
  width: 18%;
  padding-right: 80px; }
  @media screen and (max-width: 992px) {
    .header__logo {
      padding-right: 20px; } }
  @media screen and (max-width: 768px) {
    .header__logo {
      float: left; } }
  @media screen and (max-width: 577px) {
    .header__logo {
      float: none;
      padding: 0;
      text-align: center;
      display: inline-block;
      width: 100%; } }
  .header__logo .svg-sprite-icon {
    width: 74px;
    height: 93px;
    fill: #00C368; }
    @media screen and (max-width: 1199px) {
      .header__logo .svg-sprite-icon {
        width: 60px;
        height: 70px; } }
    @media screen and (max-width: 577px) {
      .header__logo .svg-sprite-icon {
        width: 50px;
        height: 63px; } }
  .header__logo h1 {
    font-style: italic;
    font-weight: 700;
    font-size: 50px;
    color: #A6ABBD;
    text-transform: uppercase; }
    @media screen and (max-width: 1199px) {
      .header__logo h1 {
        font-size: 40px; } }
    @media screen and (max-width: 992px) {
      .header__logo h1 {
        font-size: 33px; } }
    .header__logo h1 span {
      padding-left: 25px;
      position: relative; }

.header__menu {
  display: table-cell;
  vertical-align: middle; }
  @media screen and (max-width: 768px) {
    .header__menu {
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%; } }
  @media screen and (max-width: 577px) {
    .header__menu {
      display: none; } }
  .header__menu li {
    display: inline-block;
    font-size: 16px;
    margin-right: 74px;
    transition: all ease .2s;
    cursor: pointer;
    border-radius: 8px;
    min-width: 117px; }
    @media screen and (max-width: 1199px) {
      .header__menu li {
        margin-right: 30px;
        min-width: auto;
        min-height: auto; } }
    @media screen and (max-width: 992px) {
      .header__menu li {
        margin-right: 10px; } }
    .header__menu li:hover {
      background-color: #00C368;
      box-shadow: 0px 8px 16px rgba(0, 195, 104, 0.4);
      border-radius: 8px; }
      .header__menu li:hover a {
        color: #fff; }
    .header__menu li:last-child {
      margin-right: 0; }
  .header__menu a {
    color: #A6ABBD;
    text-decoration: none;
    transition: all ease .2s;
    display: block;
    padding: 4px 24px; }
    @media screen and (max-width: 992px) {
      .header__menu a {
        padding: 4px 16px; } }

.header__btn {
  display: inline-block; }
  @media screen and (max-width: 768px) {
    .header__btn {
      float: right; } }
  @media screen and (max-width: 577px) {
    .header__btn {
      display: none; } }
  .header__btn a {
    display: block;
    color: #fff;
    padding: 4px 24px;
    transition: all ease .2s;
    text-decoration: none;
    background-color: #00C368;
    box-shadow: 0px 8px 16px rgba(0, 195, 104, 0.4);
    border-radius: 8px;
    min-width: 117px;
    min-height: 32px;
    text-align: center; }
    @media screen and (max-width: 1199px) {
      .header__btn a {
        min-width: auto;
        min-height: auto; } }
    @media screen and (max-width: 992px) {
      .header__btn a {
        padding: 4px 16px; } }

body.show-modal {
  overflow: hidden; }

.vmodal.open .vmodal__overlay {
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto; }

.vmodal.open .vmodal__overlay,
.vmodal.open .vmodal__window {
  opacity: 1;
  z-index: 999; }

.vmodal.hide .vmodal__overlay,
.vmodal.hide .vmodal__window {
  opacity: 1;
  z-index: 999; }

.vmodal.open .vmodal__window {
  transform: translateY(1.75rem); }

.vmodal.open .vmodal__overlay {
  background-color: rgba(0, 0, 0, 0.9); }

.vmodal.hide .vmodal__window {
  transform: translateY(-200px); }

.vmodal.hide .vmodal__overlay {
  background-color: rgba(0, 0, 0, 0); }

.vmodal__window, .vmodal__overlay {
  opacity: 0;
  z-index: -1; }

.vmodal__overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0);
  transition: background .2s ease-in; }

.vmodal__window {
  padding-bottom: 15px;
  width: 95%;
  margin: 0 auto 1.75rem;
  background: #fff;
  border-radius: 5px;
  transform: translateY(-200px);
  transition: transform .2s ease-in; }
  .vmodal__window .g-btn {
    width: 100%;
    padding: 10px 45px; }
  .vmodal__window input[type='text'],
  .vmodal__window input[type='email'],
  .vmodal__window input[type='tel'],
  .vmodal__window input[type='date'],
  .vmodal__window select,
  .vmodal__window textarea {
    margin-bottom: 15px;
    padding: 8px;
    width: 100%;
    border: none;
    box-shadow: none;
    border-radius: 4px; }
  .vmodal__window label {
    display: inline-flex;
    align-items: flex-start;
    margin-right: 10px;
    margin-bottom: 15px;
    cursor: pointer; }
    .vmodal__window label:hover {
      color: #bbb; }
    .vmodal__window label .filter__checkbox {
      position: relative;
      display: inline-block;
      margin-top: 4px;
      margin-right: 8px;
      margin-left: 8px;
      flex-shrink: 0;
      background-color: #fff;
      border-radius: 4px;
      width: 14px;
      height: 14px; }
      .vmodal__window label .filter__checkbox:after {
        position: absolute;
        content: '';
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 50%;
        height: 50%;
        background-color: transparent;
        border-radius: 2px; }
    .vmodal__window label input[type='checkbox'],
    .vmodal__window label input[type='radio'] {
      display: none; }
      .vmodal__window label input[type='checkbox']:checked ~ .filter__checkbox:after,
      .vmodal__window label input[type='radio']:checked ~ .filter__checkbox:after {
        background-color: #bbb; }

.vmodal__header {
  display: flex;
  padding: 10px 15px;
  justify-content: space-between;
  border-bottom: 1px solid #eee; }

.vmodal__title {
  font-size: 1.5rem;
  font-family: "Arial";
  color: #bbb; }

.vmodal__close {
  font-size: 28px;
  cursor: pointer; }

.vmodal__body {
  padding: 10px 15px; }

.vmodal__body p {
  margin: 0 0 5px; }

.vmodal__footer {
  display: -moz-flex;
  display: -ms-flex;
  display: -o-flex;
  display: flex;
  padding: 10px 15px;
  border-top: 1px solid #eee;
  align-items: center; }

.vmodal__link {
  display: inline-block;
  margin-left: auto;
  background: transparent;
  /*text-align: right;*/
  font-size: 14px;
  border: none;
  color: #ccc;
  box-shadow: none; }

.hero {
  background: linear-gradient(111.04deg, #E2E2E2 0.39%, rgba(255, 255, 255, 0) 86.46%);
  position: relative;
  z-index: 2;
  color: #2E3A59; }
  .hero__topLine {
    padding: 101px 0 69px 0;
    text-align: center; }
  .hero__paralax-1 {
    position: absolute;
    z-index: 1;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-attachment: fixed;
    background-position: left bottom;
    background-repeat: no-repeat;
    background-image: url("../images/content/pattern-1.png"); }
    @media screen and (max-width: 1300px) {
      .hero__paralax-1 {
        display: none; } }
  .hero__paralax-2 {
    position: absolute;
    z-index: 1;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background-attachment: fixed;
    background-position: right 90px;
    background-repeat: no-repeat;
    background-image: url("../images/content/pattern-2.png"); }
    @media screen and (max-width: 1300px) {
      .hero__paralax-2 {
        display: none; } }
  .hero__block {
    position: relative;
    z-index: 5;
    height: 700px;
    width: 100%; }
  .hero__block-slider .elem .svg-sprite-icon {
    filter: drop-shadow(4px 4px 8px #A6ABBD); }
  .hero__block-row1 {
    max-width: 480px;
    margin: 0 auto;
    width: 100%;
    text-align: center;
    padding-bottom: 115px; }
    .hero__block-row1 .elem1 {
      float: left; }
      .hero__block-row1 .elem1 .svg-sprite-icon {
        width: 64px;
        height: 71px; }
    .hero__block-row1 .elem2 {
      float: right; }
      .hero__block-row1 .elem2 .svg-sprite-icon {
        width: 56px;
        height: 72px; }
  .hero__block-row2 {
    max-width: 850px;
    margin: 0 auto;
    width: 100%;
    text-align: center;
    padding-bottom: 80px; }
    .hero__block-row2 .elem3 {
      float: left; }
      .hero__block-row2 .elem3 .svg-sprite-icon {
        width: 56px;
        height: 72px; }
    .hero__block-row2 .elem4 {
      float: right; }
      .hero__block-row2 .elem4 .svg-sprite-icon {
        width: 96px;
        height: 87px; }
  .hero__block-row3 {
    max-width: 480px;
    margin: 0 auto;
    width: 100%;
    text-align: center; }
    .hero__block-row3 .elem5 {
      float: left; }
      .hero__block-row3 .elem5 .svg-sprite-icon {
        width: 64px;
        height: 71px; }
    .hero__block-row3 .elem6 {
      float: right; }
      .hero__block-row3 .elem6 .svg-sprite-icon {
        width: 56px;
        height: 72px; }
  .hero .elem .svg-sprite-icon {
    transition: all ease .2s; }
    .hero .elem .svg-sprite-icon:hover {
      fill: #00C368; }
  .hero .img {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
